{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","customValidation","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","onBlur","NewMovie","onAdd","count","formState","setFormState","isValidUrl","test","hasTitleError","setHasTitleError","hasImgUrlError","setHasImgUrlError","hasImdbUrlError","setHasImdbUrlError","hasImdbIdError","setHasImdbIdError","hasDescriptionError","setHasDescriptionError","handleChange","e","target","trim","prev","onSubmit","event","preventDefault","disabled","onClick","initialMovie","App","setMovies","newPost","currentPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7faa1475.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange: (newValue: React.ChangeEvent<HTMLInputElement>) => void,\n  customValidation?: (value: string) => boolean;\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  customValidation = () => true,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required\n  && !value && (!value || !customValidation(value));\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          name={name}\n          onChange={onChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie)=> void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count] = useState(0);\n\n  const [formState, setFormState] = useState({\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    description: '',\n  });\n\n  const isValidUrl = (value: string) => {\n    // eslint-disable-next-line\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    return pattern.test(value);\n  };\n\n  const [hasTitleError, setHasTitleError] = useState(true);\n  const [hasImgUrlError, setHasImgUrlError] = useState(true);\n  const [hasImdbUrlError, setHasImdbUrlError] = useState(true);\n  const [hasImdbIdError, setHasImdbIdError] = useState(true);\n  const [hasDescriptionError, setHasDescriptionError] = useState(true);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'title':\n        setHasTitleError(!value || value.trim() === '');\n        break;\n      case 'imgUrl':\n        setHasImgUrlError(!value || value.trim() === '');\n        break;\n      case 'imdbUrl':\n        setHasImdbUrlError(!value || value.trim() === '');\n        break;\n      case 'imdbId':\n        setHasImdbIdError(!value || value.trim() === '');\n        break;\n      case 'description':\n        setHasDescriptionError(!value || value.trim() === '');\n        break;\n      default:\n        break;\n    }\n\n    setFormState(prev => ({ ...prev, [name]: value }));\n  };\n\n  const areRequiredFieldsFilled = () => {\n    return (\n      formState.title.trim() !== ''\n      && formState.imgUrl.trim() !== ''\n      && formState.imdbUrl.trim() !== ''\n      && formState.imdbId.trim() !== ''\n    );\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!(hasTitleError\n      || hasImgUrlError || hasImdbUrlError || hasImdbIdError\n      || hasDescriptionError)) {\n      setFormState({\n        title: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        description: '',\n      });\n    }\n\n    setHasTitleError(false);\n    setHasImgUrlError(false);\n    setHasImdbUrlError(false);\n    setHasImdbIdError(false);\n    setHasDescriptionError(false);\n\n    onAdd({\n      title: formState.title,\n      imgUrl: formState.imgUrl,\n      imdbId: formState.imdbId,\n      imdbUrl: formState.imdbUrl,\n      description: formState.description,\n    });\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formState.title}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formState.description}\n        onChange={handleChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formState.imgUrl}\n        onChange={handleChange}\n        customValidation={isValidUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formState.imdbUrl}\n        onChange={handleChange}\n        customValidation={isValidUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formState.imdbId}\n        onChange={handleChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            disabled={!areRequiredFieldsFilled()}\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={() => {}}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nconst initialMovie: Movie[] = moviesFromServer.map(movie => ({\n  ...movie,\n}));\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(initialMovie);\n\n  const addPost = (newPost: Movie) => {\n    setMovies(currentPosts => [...currentPosts, newPost]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addPost} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}